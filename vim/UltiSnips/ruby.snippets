snippet ic "Include" b
include ${1:module}
endsnippet


snippet req "Require" b
require '$0'
endsnippet


snippet rr "Require relative" b
require_relative '$0'
endsnippet


snippet do "Do block" w
do
  $0
end
endsnippet


snippet mm "method_missing" b
def method_missing(${1:name}, ${2:*args}, ${3:&block})
  $0
end
endsnippet


snippet bg "block_given?" w
block_given?
endsnippet


snippet aa "attr_accessor" b
attr_accessor :${1:name}
endsnippet


snippet ar "attr_reader" b
attr_reader :${1:name}
endsnippet


snippet aw "attr_writer" b
attr_writer :${1:name}
endsnippet


# RSpec Snippets
snippet it "RSpec 'it'" b
it "should ${1:description}" do
  $0
end
endsnippet


snippet i "RSpec inline 'it'" b
it { should $0 }
endsnippet


snippet des "RSpec 'describe'" b
describe ${1:subject} do
  $0
end
endsnippet


snippet be "RSpec 'before'" !b
before do
  $0
end
endsnippet


snippet b "RSpec inline 'before'" !b
before { $0 }
endsnippet


snippet let "RSpec 'let'" !b
let(:${1:name}) do
  $0
end
endsnippet


snippet l "RSpec inline 'let'" b
let(:${1:name}) { $0 }
endsnippet


snippet e "RSpec inline 'expect'" b
expect { $0 }
endsnippet
